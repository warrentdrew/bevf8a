batch_size: 1 # 8 gpu, total bs: 8
epochs: 6

train_dataset:
  type: AT128Dataset
  data_root: ./data
  with_velocity: False
  use_bbox_used_in_mainline: False
  num_views: 6
  ann_file: ./data/at128/at128_hesai128_train_52000_early_fusion.pkl
  load_interval: 1
  classes: ['TrainedOthers', 'smallMot', 'bigMot', 'nonMot', 'pedestrian']
  modality: 
    use_lidar: True
    use_camera: True
    use_radar: False
    use_map: False
    use_external: False
  test_mode: False
  box_type_3d: 'LiDAR'
  pipeline:
    - type: LoadMultiViewImageFromZipFiles
      to_float32: true
    - type: LoadPointsFromZipFile
      coord_type: 'LIDAR'
      load_dim: 4
      use_dim: 4
    - type: LoadAnnotations3D
      with_bbox_3d: true
      with_label_3d: true
    - type: GlobalRotScaleTransBEV
      resize_lim: [0.95, 1.05]
      rot_lim: [-0.3925, 0.3925]
      trans_lim: 0.0
      is_train: true
    - type: RandomFlip3DBEVHori
    - type: PointsRangeFilter
      point_cloud_range: [-120, -120, -5, 120, 120, 5]
    - type: SampleRangeFilter # instead of object range filter 
      point_cloud_range: [-120, -120, -5, 120, 120, 5]
    - type: SampleNameFilter  # instead of sample name filter
      classes: ['TrainedOthers', 'smallMot', 'bigMot', 'nonMot', 'pedestrian']
    - type: PointShuffle
    - type: RandomScaleImageMultiViewImage
      scales: [0.4]
    - type: MyNormalize
      mean: [123.675, 116.28, 103.53]
      std: [58.395, 57.12, 57.375]
      to_rgb: true
    - type: MyPad
      size_divisor: 32
    - type: DefaultFormatBundle3D
      class_names: ['TrainedOthers', 'smallMot', 'bigMot', 'nonMot', 'pedestrian']
    - type: SampleFilterByKey
      keys: ['points', 'img', 'gt_bboxes_3d', 'gt_labels_3d']

  eval_configs: 
    class_range:
      TrainedOthers: 150
      pedestrian: 150
      bigMot: 150
      smallMot: 150
      nonMot: 150
    distances: [[0, 30], [30, 60], [60, 90], [90, 120]]
    rel_dist_fcn: 'relative_center_distance'
    rel_dist_th_tp: 0.1
    ab_dist_th_tp: 1.5
    iou_th_hard_tp: 0.5
    iou_th_easy_tp: 0.2
    rel_ab_th: 30
    iou_type: 'geo_iou'
    iou_matrix_path: 'piou_matrix.pkl'
    geo_iou_type: 'bev_iou'
    min_recall: 0.0
    min_precision: 0.0
    max_boxes_per_sample: 1000
    ignore_gt_valid: True
    score_thr: 0.1
    fuse_mot: False
    cross_cls_match: False
    score_first: False
    dist_type: 'iou_dist'
    pts_dist_path: 'dist_infos.pkl'
    render_curves: False
    metric: ['lidar']
  
val_dataset:
  type: AT128Dataset
  data_root: ./data
  with_velocity: False
  use_bbox_used_in_mainline: False
  num_views: 6
  ann_file: ./data/at128/at128_test_4097_early_fusion_camera.pkl
  load_interval: 1
  classes: ['TrainedOthers', 'smallMot', 'bigMot', 'nonMot', 'pedestrian']
  modality: 
    use_lidar: True
    use_camera: True
    use_radar: False
    use_map: False
    use_external: False
  test_mode: True
  box_type_3d: 'LiDAR'
  pipeline:
    - type: LoadPointsFromZipFile
      coord_type: 'LIDAR'
      load_dim: 4
      use_dim: 4
    - type: LoadMultiViewImageFromZipFiles
      to_float32: true
    - type: MultiScaleFlipAug3D
      img_scale: (720, 465) #not list
      pts_scale_ratio: 1
      flip: False
      transforms:
        - type: RandomScaleImageMultiViewImage
          scales: [0.4]
        - type: MyNormalize
          mean: [123.675, 116.28, 103.53]
          std: [58.395, 57.12, 57.375]
          to_rgb: true
        - type: MyPad
          size_divisor: 32
        - type: DefaultFormatBundle3D
          class_names: [
                        'bigMot', 'smallMot', 'nonMot', 'pedestrian',
                        'TrainedOthers'
                    ]
          with_label: False
        - type: SampleFilterByKey
          keys: ['points', 'img']
  
  eval_configs: 
    class_range:
      TrainedOthers: 150
      pedestrian: 150
      bigMot: 150
      smallMot: 150
      nonMot: 150
    distances: [[0, 30], [30, 60], [60, 90], [90, 120]]
    rel_dist_fcn: 'relative_center_distance'
    rel_dist_th_tp: 0.1
    ab_dist_th_tp: 1.5
    iou_th_hard_tp: 0.5
    iou_th_easy_tp: 0.2
    rel_ab_th: 30
    iou_type: 'geo_iou'
    iou_matrix_path: 'piou_matrix.pkl'
    geo_iou_type: 'bev_iou'
    min_recall: 0.0
    min_precision: 0.0
    max_boxes_per_sample: 1000
    ignore_gt_valid: True
    score_thr: 0.1
    fuse_mot: False
    cross_cls_match: False
    score_first: False
    dist_type: 'iou_dist'
    pts_dist_path: 'dist_infos.pkl'
    render_curves: False
    metric: ['lidar']

model:
  type: BEVFFasterRCNNV1
  sync_bn: true
  load_cam_from: ./output/bevf_cam/epoch_24/model.pdparams
  load_lidar_from: ./output/bevf_lidar/epoch_40/model.pdparams
  se: True
  lc_fusion: True
  camera_stream: True
  use_cam2bev_transformer: False
  grid: 0.6
  num_views: 6
  final_dim: [1860, 2880]
  downsample: 16
  imc: 256
  lic: 121
  dla_add_extra_conv: True
  need_convert_gt_format: True #it is important, and cannot be removed! 
  use_bbox_used_in_mainline: False
  norm_decay: 0.01
  tasks: 
    - num_class: 1
      class_names: ['TrainedOthers']
    - num_class: 1
      class_names: ["smallMot"]
    - num_class: 1
      class_names: ["bigMot"]
    - num_class: 1
      class_names: ["nonMot"]
    - num_class: 1
      class_names: ["pedestrian"]
  test_cfg: 
    nms:
      use_rotate_nms: False
      use_rotate_nms_overlap: True
      use_multi_class_nms: False
      nms_groups: [['TrainedOthers', 'pedestrian', 'smallMot', 'bigMot', 'nonMot'], ['TrainedOthers']]
      group_nms_iou_threshold: [0.1, 0.05]
      add_iou_edge: 0.0
      nms_overlap_groups: [['TrainedOthers', 'smallMot', 'bigMot', 'pedestrian', 'nonMot']]
      group_nms_overlap_iou_threshold: [0.6]
      nms_pre_max_size: 5000
      nms_post_max_size: 1000 #80,
      nms_iou_threshold: 0.5 #0.2,
    score_threshold: 0.09 #0.1,
    post_center_limit_range: [-130, -130, -5, 130, 130, 5]
    max_per_img: 1000
  img_backbone:
      type: DLASeg
      channels: [16, 32, 64, 64, 128, 256]
      output_levels: 5
      norm_decay: 0.01
      final_dim: [1860, 2880]
      downsample: 16
      use_resize: False
  cam2bev_modules:
      type: UniformBevGridTransformer
      lss: False
      use_conv_bevencoder: False
      point_cloud_range: [-120.0, -120.0, -5.0, 120.0, 120.0, 3.0]
      bev_h: 144
      bev_w: 144
      norm_decay: 0.01
      positional_encoding:
        type: 'SinePositionalEncoding'
        num_feats: 128
        normalize: True
      transformer:
        type: 'PerceptionTransformer'
        num_feature_levels: 1
        num_cams: 6
        embed_dims: 256
        rotate_prev_bev: False
        use_shift: True
        use_can_bus: False
        can_bus_norm: False
        use_cams_embeds: True
        rotate_center: [100, 100]
        use_decoder: False
        norm_decay: 0.01
        encoder:
          type: 'BEVFormerEncoder'
          num_layers: 1
          point_cloud_range: [-120.0, -120.0, -5.0, 120.0, 120.0, 3.0]
          num_points_in_pillar: 4
          return_intermediate: False
          transformerlayers:
            type_name: 'BEVFormerLayer'
            norm_decay: 0.01
            attn_cfgs:  [
              {
                type_name: 'SpatialCrossAttention',
                point_cloud_range: [-120.0, -120.0, -5.0, 120.0, 120.0, 3.0],
                deformable_attention: {
                  type_name: 'MSDeformableAttention3D',
                  embed_dims: 256,
                  num_points: 8,
                  num_levels: 1
                },
                embed_dims: 256
              }
            ]
            feedforward_channels: 512
            ffn_dropout: 0.1
            operation_order: ['cross_attn', 'norm', 'ffn', 'norm']      
  pts_voxel_layer:
    max_num_points: -1
    point_cloud_range: [-120, -120, -5, 120, 120, 5]
    voxel_size: [0.2083, 0.2083, 10.0]
    max_voxels: [-1, -1]
  bev_feature_layer:
    point_cloud_range: [-120, -120, -5, 120, 120, 5]
    voxel_size: [0.2083, 0.2083, 10.0]
    cnnseg_feature_dim: 6
    compute_logodds_cfg:
      vis_range: [-120, -120, -3, 120, 120, 2]
      vis_voxel_size: [0.2083, 0.2083, 1.25]
      compute_logodds: True
  pts_voxel_encoder:
    type: DynamicPillarFeatureNet
    in_channels: 4
    feat_channels: [64,]
    with_distance: False
    with_cluster_center: True
    with_voxel_center: True
    voxel_size: [0.2083, 0.2083, 10.0]
    point_cloud_range: [-120, -120, -5, 120, 120, 5]
    norm_cfg: 
      type_name: BN1d
      epsilon: 0.001 # change to epsilon from eps for paddle
      momentum: 0.01 #0.01 diff for paddle
      requires_grad: True
    mode: max
    legacy: False
    input_norm: True
  pts_middle_encoder:
    type: PointPillarsScatterExpandVisV2
    num_input_features: 64
    input_expand_filters: 10
    expand_filters: 64
    norm_cfg: 
      type_name: BN # change to type_name from type
      epsilon: 0.001 # change to epsilon from eps for paddle
      momentum: 0.99 #0.01
      requires_grad: True
    remove_intensity: False
  pts_neck:
    type: HighResolutionNet
    ds_layer_strides: [2, 2, 2, 2]
    us_layer_strides: [1, 2, 4, 8]
    num_input_features: 64
    num_inner_features: 64
    num_output_features: 121 #int(sum([18, 32, 64, 128]) / 2),
    pretrained: null
    norm_cfg:
      type_name: BN
      epsilon: 0.001 # change to epsilon from eps for paddle
      momentum: 0.99 #0.01
      requires_grad: True
    extra:
      stage1:
        num_modules: 1
        num_branches: 1
        block: BOTTLENECK
        num_blocks: [2,]
        num_channels: [64,]
        fuse_method: SUM
      stage2:
        num_modules: 1
        num_branches: 2
        block: BASIC
        num_blocks: [2, 2]
        num_channels: [18, 32]
        fuse_method: SUM
      stage3:
        num_modules: 1
        num_branches: 3
        block: BASIC
        num_blocks: [2, 2, 2]
        num_channels: [18, 32, 64]
        fuse_method: SUM
      stage4:
        num_modules: 1
        num_branches: 4
        block: BASIC
        num_blocks: [2, 2, 2, 2]
        num_channels: [18, 32, 64, 128]
        fuse_method: SUM
  pts_bbox_head:
    type: MultiGroupHead
    mode: 3d
    in_channels: 121 
    ds_head_filters: [128]
    ds_head_strides: [2]
    head_layer_index: [0, 1, 1, 0, 0]
    num_anchor_per_locs: [1, 4, 4, 2, 1]
    pc_range: [-120, -120, -5, 120, 120, 5]
    assign_cfg: 
      tasks:
        - num_class: 1
          class_names: ['TrainedOthers']
        - num_class: 1
          class_names: ["smallMot"]
        - num_class: 1
          class_names: ["bigMot"]
        - num_class: 1
          class_names: ["nonMot"]
        - num_class: 1
          class_names: ["pedestrian"]
      sample_positive_fraction: -1
      sample_size: 512
      bbox_coder:
        type_name: DeltaXYZWLHRBBoxCoderIDG
        code_size: 7
        use_bbox_used_in_mainline: False
      target_assigners:
        - matched_threshold: 0.6
          unmatched_threshold: 0.3
          class_name: TrainedOthers
          region_similarity_calculator:
            type_name: nearest_iou_similarity
        - matched_threshold: 0.6
          unmatched_threshold: 0.45
          class_name: smallMot
          region_similarity_calculator: 
            type_name: nearest_iou_similarity
        - matched_threshold: 0.6
          unmatched_threshold: 0.4
          class_name: bigMot
          region_similarity_calculator:
            type_name: nearest_iou_similarity
        - matched_threshold: 0.4
          unmatched_threshold: 0.2
          class_name: nonMot
          region_similarity_calculator:
            type_name: nearest_iou_similarity
        - matched_threshold: 0.92
          unmatched_threshold: 0.77
          class_name: pedestrian
          region_similarity_calculator:
            type_name: nearest_iou_similarity
      quantize: -1
      use_anchor_mask: True
      pc_range: [-120, -120, -5, 120, 120, 5]
      voxel_size: [0.2083, 0.2083, 10.0]
      num_anchor_per_locs_by_class: [[1],[4],[4],[2],[1]]
    norm_cfg:
      type_name: BN
      epsilon: 0.001 # change to epsilon from eps for paddle norm_cfg_2
      momentum: 0.99 #0.01
      requires_grad: True
    tasks:
      - num_class: 1
        class_names: ['TrainedOthers']
      - num_class: 1
        class_names: ["smallMot"]
      - num_class: 1
        class_names: ["bigMot"]
      - num_class: 1
        class_names: ["nonMot"]
      - num_class: 1
        class_names: ["pedestrian"]
    weights: [1,]
    bbox_coder:
      type_name: DeltaXYZWLHRBBoxCoderIDG
      code_size: 7
      use_bbox_used_in_mainline: False
    encode_background_as_zeros: True
    anchor_cfg:
      anchor_generators:
        - type_name: "AlignedAnchor3DRangeGenerator"
          sizes: [[0.3946, 0.3957, 0.7657]] # wlh,
          ranges: [[-120, -120, -2.0920, 120, 120, -2.0920]]
          rotations: [0.0]
          # class_name: "TrainedOthers"
        - type_name: AlignedAnchor3DRangeGenerator
          sizes: [[1.8582, 4.2488, 1.5632], [2.1340, 4.6585, 1.7840]] # wlh
          ranges: [[-120, -120, -1.9342, 120, 120, -1.9342]]
          rotations: [0, 1.57]
          # class_name: "smallMot" 
        - type_name: AlignedAnchor3DRangeGenerator
          sizes: [[3.0111, 9.6663, 3.3182], [2.0855, 5.0784, 2.1013]] #wlh
          ranges: [[-120, -120, -2.0971, 120, 120, -2.0971]]
          rotations: [0, 1.57]
          # class_name: "bigMot"
        - type_name: "AlignedAnchor3DRangeGenerator"
          sizes: [[0.8480, 1.9163, 1.4149]]
          ranges: [[-120, -120, -1.9851, 120, 120, -1.9851]]
          rotations: [0, 1.57]
          # class_name: "nonMot"
        - type_name: "AlignedAnchor3DRangeGenerator"
          sizes: [[0.6753, 0.6589, 1.6715]]
          ranges: [[-120, -120, -1.8941, 120, 120, -1.8941]]
          rotations: [0.0]
          # class_name: "pedestrian"
    loss_norm:
      type_name: NormByNumPositives
      pos_cls_weight: 2.0
      neg_cls_weight: 0.5
    loss_cls:
      type_name: WeightedSigmoidLoss
      loss_weight: 0.1
    use_sigmoid_score: True
    loss_bbox:
      type_name: WeightedSmoothL1LossIDG
      sigma: 3.0
      code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      codewise: True
      loss_weight: 1.0
    encode_rad_error_by_sin: True
    loss_aux:
      type_name: WeightedSoftmaxClassificationLossIDG
      name: direction_classifier
      task_loss_aux_weight: [0, 1.0, 1.0, 1.0, 0]
      loss_weight: 0.2
    direction_offset: 0.0  
  pts_roi_head:
    type: "ConfidenceHead"
    mode: "3d"
    in_channels: 121 # int(sum([18, 32, 64, 128]) / 2),  # this is linked to 'neck' us_num_filters
    norm_cfg:
      type_name: BN
      epsilon: 0.001 # change to epsilon from eps for paddle
      momentum: 0.99 #0.01
      requires_grad: True
    tasks:
      - num_class: 1
        class_names: ['TrainedOthers']
      - num_class: 1
        class_names: ["smallMot"]
      - num_class: 1
        class_names: ["bigMot"]
      - num_class: 1
        class_names: ["nonMot"]
      - num_class: 1
        class_names: ["pedestrian"]
    weights: [1,]
    bbox_coder:
      type_name: DeltaXYZWLHRBBoxCoderIDG
      code_size: 7
      use_bbox_used_in_mainline: False
    encode_background_as_zeros: True
    loss_cls:
      type_name: CrossEntropyLossIDG
      use_sigmoid: True
      loss_weight: 1.0
    loss_norm:
      type_name: NormByNumPoints
    use_sigmoid_score: True
    use_direction_classifier: True
    pc_range: [-120, -120, -5, 120, 120, 5]
    voxel_size: [0.2083, 0.2083, 10.0]
    grid_size: [1152, 1152, 1]
    direction_offset: 0.0 
    rpn_cfg:
      score_threshold: 0.05
      nms_pre_max_size: 5000
      use_nms: 1
      nms_post_max_size: 2000
      nms_iou_threshold: 0.5
      use_gt_boxes: True

optimizer:
  type: AdamWOnecycleClipGlobalNorm
  clip_grad_by_global_norm: 10.0
  beta1: 0.9
  beta2: 0.99
  weight_decay: 0.01

lr_scheduler:
  type: OneCycle
  total_step: 39000 # 6*6500
  lr_max: 0.000125 #bs8
  moms: [0.95, 0.85]
  div_factor: 10
  pct_start: 0.4
 
